import { GameState } from "@ttt/lib/db/GameState";
import { DatabaseConnectionType, sql } from "slonik";

export const createGame = async (
  connection: DatabaseConnectionType,
  shortId: string,
  gameState: GameState
) => {
  return connection.oneFirst(sql<queries.Game>`
      insert into games (short_id, player_one_id, player_two_id, fk_game_state_id, fk_winner_id)
      values (${shortId}, gen_random_uuid(), gen_random_uuid(), ${gameState}, null)
      returning player_one_id`);
};

export const getPlayerTwoId = async (
  connection: DatabaseConnectionType,
  shortId: string
) => {
  return connection.maybeOne(
    sql<queries.GetPlayerTwoId>`select player_two_id from games where short_id = ${shortId}`
  );
};

export declare namespace queries {
  // Generated by @slonik/typegen

  /** - query: `insert into games (short_id, player_one_... [truncated] ...uid(), $2, null) returning player_one_id` */
  export interface Game {
    /** column: `public.games.player_one_id`, not null: `true`, regtype: `uuid` */
    player_one_id: string;
  }

  /** - query: `select player_two_id from games where short_id = $1` */
  export interface GetPlayerTwoId {
    /** column: `public.games.player_two_id`, not null: `true`, regtype: `uuid` */
    player_two_id: string;
  }
}
